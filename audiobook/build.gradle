apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.1'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 77
        versionName 'preview'
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            shrinkResources false
            applicationIdSuffix ".debug"
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = file("apks/" + variant.versionCode + "-" + variant.versionName + "-" +
                    variant.name + "-" + variant.applicationId + ".apk")
        }
    }
}

def Properties props = new Properties()
def propFile = new File('signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))
    if (props != null &&
            props.containsKey('STORE_FILE') &&
            props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') &&
            props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}

dependencies {
    compile 'com.android.support:appcompat-v7:23.1.0'
    compile 'com.android.support:recyclerview-v7:23.1.0'
    // http library
    compile 'com.squareup.okhttp:okhttp:2.5.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.5.0'
    // image loading
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile('com.afollestad.material-dialogs:core:0.8.5.0@aar') { // material styled dialogs
        transitive = true
    }
    // fab
    compile 'com.getbase:floatingactionbutton:1.10.0'
    // crash reporting
    compile 'ch.acra:acra:4.7.0-RC.1'
    // common tools
    compile 'com.google.guava:guava:18.0'
    // view injection
    compile 'com.jakewharton:butterknife:7.0.1'
    // dependency injection
    compile 'com.google.dagger:dagger:2.0.1'
    apt "com.google.dagger:dagger-compiler:2.0.1"
    provided 'javax.annotation:jsr250-api:1.0'
    // auto value
    compile 'com.github.frankiesardo:auto-parcel:0.3.1'
    apt 'com.github.frankiesardo:auto-parcel-processor:0.3.1'
    // logging
    compile 'com.jakewharton.timber:timber:4.1.0'
    testCompile 'junit:junit:4.12'
    // rx extensions
    compile 'io.reactivex:rxandroid:1.0.1'
    compile 'io.reactivex:rxjava:1.0.14'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply from: "../artifacts.gradle"

android {

    // dynamically pass 21 to the compiler for build speedup without losing lint warnings.
    int minSdk = project.hasProperty('minSdk') ? minSdk.toInteger() : 16
    minSdk = 16

    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        applicationId "de.ph1b.audiobook"
        minSdkVersion minSdk
        targetSdkVersion 25
        versionCode 177
        versionName '3.2.0-beta2'

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            shrinkResources false
            ext.enableCrashlytics = false
        }
    }

    testOptions.unitTests.returnDefaultValues = true

    lintOptions.abortOnError = false

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    //noinspection GroovyMissingReturnStatement
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    productFlavors {
        allConfigs {}
        singleConfig {
            resConfigs "en", "xxhdpi"
        }
    }
}

def Properties props = new Properties()
def propFile = new File('signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))
    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') && props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = rootProject.file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        throw IllegalArgumentException("Invalid properties")
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}

dependencies {
    compile libraries.supportAppCompat
    compile libraries.supportRecyclerView
    compile libraries.supportDesign
    compile libraries.supportTransitions
    compile libraries.supportConstraintLayout

    compile libraries.picasso

    compile libraries.materialDialogs

    compile libraries.floatingActionButton

    compile(libraries.crashlytics) {
        transitive = true
    }

    compile libraries.dagger
    kapt libraries.daggerCompiler
    provided libraries.jsr250

    testCompile libraries.junit
    testCompile libraries.robolectric
    testCompile libraries.assertJ

    testCompile libraries.okHttp

    compile libraries.rxJava
    compile libraries.rxAndroid
    compile libraries.rxInterop
    compile libraries.rxPreferences

    compile libraries.kotlinStdLib

    compile libraries.slimber

    compile libraries.androidPlayer

    compile libraries.conductor
    compile libraries.conductorSupport
    compile libraries.conductorLifecycle

    compile libraries.moshi
    compile libraries.isoparser
}